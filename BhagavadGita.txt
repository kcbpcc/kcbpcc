#!/bin/bash

echo "ఆత్మ నిత్య సత్యమైనది, చావు లేనిది. మృత్యువు వారిని శరీరాల నుండి వేరుచేస్తుందే కానీ"
echo "ఆత్మను చంపదు. సత్యమైన జ్ఞానము ఆత్మ జ్ఞానమే అంటే తనను తాను తెలుసుకోవడమే, తనలోని"
echo "అంతరాత్మ గురించి తెలుసుకోవడమే. అభ్యాస వైరాగ్యముల ద్వారా యోగి, వస్తు ప్రపంచాన్ని వదలి సర్వోత్కృష్టమైన"
echo "పరబ్రహ్మాన్ని చేరగలడు. భక్తి, కర్మ, ధ్యాన, జ్ఞాన మార్గాలలో భగవంతుని చేరవచ్చును."
echo ""
echo "మనిషి కర్మ చేయకుండా ఉండడం సాధ్యం కాదు. అయితే కర్మలవలన దోషాలు కూడా తప్పవు. సత్పురుషుల"
echo "ద్వారా జ్ఞానాన్ని సంపాదించి, సత్కర్మలు ఆచరించాలి. కర్మలపై ప్రతిఫలాన్ని ఆశించరాదు. అన్ని"
echo "కర్మల ఫలాన్ని భగవంతునకు ధారపోయాలి."
echo ""
echo "కృష్ణుడే పరబ్రహ్మము. సృష్టిలోని సకలము భగవంతుని అంశతోనే ఉన్నాయి. అన్ని పూజల, యజ్ఞాల"
echo "ఫలాలు ఆ దేవదేవునకే చెందుతాయి. బ్రహ్మ తత్వాన్ని తెలుసుకోవడానికి శ్రీకృష్ణుడు అర్జునునకు"
echo "తాత్కాలికముగా దివ్య దృష్టిని ప్రసాదించాడు. అనంతము, తేజోమయము, సర్వవ్యాప్తము, కాల స్వరూపము అయిన ఆ"
echo "శ్రీకృష్ణుని విశ్వ రూపాన్ని చూసి అర్జునుడు తరించాడు."
echo ""
echo "ప్రకృతిలో సకల జీవాలు సత్వరజస్తమోగుణాలచే నిండి ఉన్నాయి. భగవంతునకు శరణాగతుడైనవాడికి ఈ గుణాల బంధంనుండి"
echo "విముక్తి లభిస్తుంది."

# Initialize variables for summary
success_count=0
fail_count=0

# Common Setup
read -p "Are you sure you want to remove ~/pxy? (y/n): " confirm
if [ "$confirm" == "y" ]; then
    if [ -d ~/pxy ]; then
        sudo rm -rf ~/pxy
        if [ $? -eq 0 ]; then
            echo -e "\e[32mRemoved ~/pxy: Success\e[0m"
            ((success_count++))
        else
            echo -e "\e[31mFailed to remove ~/pxy\e[0m"
            ((fail_count++))
            exit 1
        fi
    else
        echo "Directory ~/pxy not found, moving on."
    fi

    sudo rm -rf /usr/local/bin/pxy*
    if [ $? -eq 0 ]; then
        echo -e "\e[32mRemoved files in /usr/local/bin/: Success\e[0m"
        ((success_count++))
    else
        echo -e "\e[31mFailed to remove files in /usr/local/bin/\e[0m"
        ((fail_count++))
        exit 1
    fi
fi

#User-specific Setup

current_user=$(whoami)

# User-specific Setup
usernames=("$current_user")
modified_successfully=false

for username in "${usernames[@]}"; do
    sudo usermod -aG sudo "$username"
    if [ $? -eq 0 ]; then
        echo -e "\e[32mUser modified successfully: $username\e[0m"
        ((success_count++))  # Increment success_count on successful user modification
        modified_successfully=true
        break  # Break out of loop on the first successful usermod
    else
        echo -e "\e[31mFailed to modify user: $username\e[0m"
    fi
done

# If modification was successful for any user, continue with the rest of the script
if [ "$modified_successfully" = true ]; then
    # apt-get upgrade
    sudo apt-get update
    if [ $? -eq 0 ]; then
        echo -e "\e[32mapt-get upgrade successful\e[0m"
        ((success_count++))
    else
        echo -e "\e[31mapt-get upgrade failed\e[0m"
        ((fail_count++))
        exit 1
    fi

    # Git installation
    sudo apt-get install git
    if [ $? -eq 0 ]; then
        echo -e "\e[32mGit installation successful\e[0m"
        ((success_count++))
    else
        echo -e "\e[31mGit installation failed\e[0m"
        ((fail_count++))
        exit 1
    fi

    # Generate SSH key
    if [ -f ~/.ssh/id_rsa.pub ]; then
        echo "SSH key file already exists. Skipping key generation."
    else
        ssh-keygen -t rsa -b 4096 -C "pxy.kcbpcc@gmail.com"
        cat ~/.ssh/id_rsa.pub
    fi

    # Check if Git installation was successful
    if [ $? -eq 0 ]; then
        echo -e "\e[32mGit installation successful\e[0m"
        ((success_count++))
    else
        echo -e "\e[31mGit installation failed\e[0m"
        ((fail_count++))
        exit 1
    fi

    # Prompt for confirmation to proceed
    read -p "Do you want to proceed? (y/n): " confirm
    if [ "$confirm" != "y" ]; then
        echo "Exiting script."
        exit 0
    fi

    # git clone https://github.com/kcbpcc/pxy.git
    git clone git@github.com:kcbpcc/pxy.git
    if [ $? -eq 0 ]; then
        echo -e "\e[32mCloned pxy repository successfully\e[0m"
        ((success_count++))
    else
        echo -e "\e[31mFailed to clone pxy repository\e[0m"
        ((fail_count++))
        exit 1
    fi

    sudo chmod -R 777 pxy
    if [ $? -eq 0 ]; then
        echo -e "\e[32mChanged permissions on pxy directory: Success\e[0m"
        ((success_count++))
    else
        echo -e "\e[31mFailed to change permissions on pxy directory\e[0m"
        ((fail_count++))
        exit 1
    fi

    sudo cp ~/pxy/sys/pxy* /usr/local/bin/
    if [ $? -eq 0 ]; then
        echo -e "\e[32mCopied pxy executables to /usr/local/bin/: Success\e[0m"
        ((success_count++))
    else
        echo -e "\e[31mFailed to copy pxy executables to /usr/local/bin/\e[0m"
        ((fail_count++))
        exit 1
    fi

    sudo chmod +x /usr/local/bin/pxy*
    if [ $? -eq 0 ]; then
        echo -e "\e[32mChanged permissions on pxy executables: Success\e[0m"
        ((success_count++))
    else
        echo -e "\e[31mFailed to change permissions on pxy executables\e[0m"
        ((fail_count++))
        exit 1
    fi

    sudo apt-get install python3-venv
    if [ $? -eq 0 ]; then
        echo -e "\e[32mPython virtual environment installation successful\e[0m"
        ((success_count++))
    else
        echo -e "\e[31mPython virtual environment installation failed\e[0m"
        ((fail_count++))
        exit 1
    fi

    python3 -m venv env
    if [ $? -eq 0 ]; then
        echo -e "\e[32mPython virtual environment creation successful\e[0m"
        ((success_count++))
    else
        echo -e "\e[31mFailed to create Python virtual environment\e[0m"
        ((fail_count++))
        exit 1
    fi

    sudo chmod -R 777 env
    if [ $? -eq 0 ]; then
        echo -e "\e[32mChanged permissions on env directory: Success\e[0m"
        ((success_count++))
    else
        echo -e "\e[31mFailed to change permissions on env directory\e[0m"
        ((fail_count++))
        exit 1
    fi

    source ~/env/bin/activate
    sudo apt-get update
    sudo apt-get install python3-pip

    if [ $? -eq 0 ]; then
        echo -e "\e[32mUpgraded pip in virtual environment: Success\e[0m"
        ((success_count++))
    else
        echo -e "\e[31mFailed to upgrade pip in virtual environment\e[0m"
        ((fail_count++))
        exit 1
    fi


    #Install Python dependencies based on the current user
    if [ "$current_user" == "userland" ]; then
        # For userland user
        cd ~/pxy/sys/exe
        source ~/env/bin/activate
        sudo pip install -r requirements.txt
    else
        # For other users, including "pxy"
        cd ~/pxy/sys/exe
        source ~/env/bin/activate
        pip install -r requirements.txt
    fi
    
    # Check if installation was successful
    if [ $? -eq 0 ]; then
        echo -e "\e[32mInstalled Python dependencies: Success\e[0m"
        ((success_count++))
    else
        echo -e "\e[31mFailed to install Python dependencies\e[0m"
        ((fail_count++))
        exit 1
    fi
    cd ~/pxy/sys/exe/run
    # ... (continue checking and printing messages for each command)

    # Display summary at the end
    echo -e "\nSummary:"
    echo -e "\e[32mSuccesses: $success_count\e[0m"
    echo -e "\e[31mFailures: $fail_count\e[0m"
else
    echo -e "\nNo user modification was successful. Exiting script."
    exit 1
fi
